---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: logpilot
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        fsGroup: 472

      containers:
        - name: grafana
          image: grafana/grafana:10.2.0
          imagePullPolicy: IfNotPresent

          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP

          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_INSTALL_PLUGINS
              value: ""
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_PATHS_DATA
              value: /var/lib/grafana
            - name: GF_SERVER_ROOT_URL
              value: http://localhost:3000
            - name: GF_ANALYTICS_REPORTING_ENABLED
              value: "false"
            - name: GF_ANALYTICS_CHECK_FOR_UPDATES
              value: "false"
            - name: GF_LOG_LEVEL
              value: "debug"

          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi

          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: datasource-config
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards
              mountPath: /etc/grafana/dashboards

      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data

        - name: datasource-config
          configMap:
            name: grafana-datasource

        - name: dashboards-config
          configMap:
            name: grafana-dashboards-config

        - name: dashboards
          configMap:
            name: grafana-dashboards
