# gRPC-only build for LogPilot Java application
FROM gradle:8.5-jdk17 AS build

# Set working directory
WORKDIR /app

# Copy gradle files
COPY gradle/ gradle/
COPY gradlew gradlew.bat build.gradle settings.gradle ./

# Copy source code
COPY logpilot-core/ logpilot-core/
COPY logpilot-client/ logpilot-client/
COPY logpilot-server/ logpilot-server/

# Make gradlew executable
RUN chmod +x gradlew

# Build the application
RUN ./gradlew :logpilot-server:build -x test

# Production image
FROM eclipse-temurin:17-jre

# Install grpcurl for health checks
RUN apt-get update && \
    apt-get install -y curl wget && \
    wget -O grpcurl.tar.gz https://github.com/fullstorydev/grpcurl/releases/download/v1.8.9/grpcurl_1.8.9_linux_x86_64.tar.gz && \
    tar -xzf grpcurl.tar.gz && \
    mv grpcurl /usr/local/bin/ && \
    chmod +x /usr/local/bin/grpcurl && \
    rm grpcurl.tar.gz && \
    rm -rf /var/lib/apt/lists/*

# Create app user
RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser

# Set working directory
WORKDIR /app

# Copy jar from build stage
COPY --from=build /app/logpilot-server/build/libs/*.jar app.jar

# Change ownership
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose only gRPC port
EXPOSE 50051

# Set environment variables for gRPC-only mode
ENV SPRING_PROFILES_ACTIVE=grpc
ENV LOGPILOT_PROTOCOL=grpc

# Health check using gRPC health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD grpcurl -plaintext localhost:50051 grpc.health.v1.Health/Check || exit 1

# Run the application
ENTRYPOINT ["java", "-jar", "app.jar"]