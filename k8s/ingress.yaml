apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: logpilot-ingress
  namespace: logpilot
  labels:
    app: logpilot
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Enable CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-enabled: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  rules:
  - host: logpilot.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: logpilot-all
            port:
              number: 8080
  - host: logpilot-rest.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: logpilot-rest
            port:
              number: 8080
---
# Ingress for HTTPS with TLS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: logpilot-tls-ingress
  namespace: logpilot
  labels:
    app: logpilot
    component: tls-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Enable CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    # Let's Encrypt
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - logpilot.example.com
    - logpilot-rest.example.com
    secretName: logpilot-tls-secret
  rules:
  - host: logpilot.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: logpilot-all
            port:
              number: 8080
  - host: logpilot-rest.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: logpilot-rest
            port:
              number: 8080